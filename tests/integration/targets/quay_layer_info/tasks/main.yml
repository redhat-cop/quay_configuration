---
- name: Retrieve the layers of the herve4m/quay-api-operator:latest image
  infra.quay_configuration.quay_layer_info:
    image: herve4m/quay-api-operator:latest
    quay_host: quay.io
  register: layers1

- name: Display result
  ansible.builtin.debug:
    var: layers1

- name: Retrieve the layers of the herve4m/quay-api-operator image (default tag)
  infra.quay_configuration.quay_layer_info:
    image: herve4m/quay-api-operator
    quay_host: quay.io
  register: layers2

- name: Ensure the two images are the same
  ansible.builtin.assert:
    that: layers1['layers']|length == layers2['layers']|length
    fail_msg: The same image should have been returned

- name: ERROR EXPECTED Retrieve an image with no namespace
  infra.quay_configuration.quay_layer_info:
    image: nosuchimageipresume
    quay_host: quay.io
  ignore_errors: true
  register: result

- name: Ensure the task has failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed

- name: Retrieve an image in a nonexisting namespace
  infra.quay_configuration.quay_layer_info:
    image: nonexisting/ansibletestrepo:latest
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Retrieve a nonexisting image in my namespace (no change)
  infra.quay_configuration.quay_layer_info:
    image: dnsmasq:v1.0.0
    quay_host: "{{ quay_url }}"
    quay_token: "{{ quay_token }}"
    validate_certs: false
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything
...
